<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Slides | Markus Hofbauer</title>
    <link>https://hofbi.github.io/slides/</link>
      <atom:link href="https://hofbi.github.io/slides/index.xml" rel="self" type="application/rss+xml" />
    <description>Slides</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2021 Markus Hofbauer</copyright><lastBuildDate>Fri, 01 May 2020 15:00:00 +0000</lastBuildDate>
    <item>
      <title>Scale your Workflow</title>
      <link>https://hofbi.github.io/slides/workflow/</link>
      <pubDate>Fri, 01 May 2020 15:00:00 +0000</pubDate>
      <guid>https://hofbi.github.io/slides/workflow/</guid>
      <description>&lt;h1 id=&#34;scale-your-workflow&#34;&gt;Scale your Workflow&lt;/h1&gt;
&lt;hr&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Project Management&lt;/li&gt;
&lt;li&gt;Development&lt;/li&gt;
&lt;li&gt;Documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;project-management&#34;&gt;Project Management&lt;/h2&gt;
&lt;p&gt;Integrated in &lt;a href=&#34;https://gitlab.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitLab&lt;/a&gt;|&lt;a href=&#34;https://github.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;|&lt;a href=&#34;https://bitbucket.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bitbucket&lt;/a&gt;|&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Issue Trackers&lt;/li&gt;
&lt;li&gt;Milestones&lt;/li&gt;
&lt;li&gt;Boards&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;issue-trackers&#34;&gt;Issue Trackers&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Collect ideas&lt;/li&gt;
&lt;li&gt;Document and discuss your decisions/progress
&lt;ul&gt;
&lt;li&gt;For/with others&lt;/li&gt;
&lt;li&gt;For/with your future self&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://pics.me.me/yes-i-talk-to-myself-thats-because-sometimes-i-need-14183709.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;team-discussions&#34;&gt;Team Discussions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Early feedback&lt;/li&gt;
&lt;li&gt;Constantly explain/justify/rethink your ideas&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Fail Often, Fail Fast, Fail Early&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;development&#34;&gt;Development&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;implementation&#34;&gt;Implementation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Common rules you should always follow
&lt;ul&gt;
&lt;li&gt;SOLID Guidelines&lt;/li&gt;
&lt;li&gt;DRY (Don&amp;rsquo;t repeat yourself)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Design Patterns
&lt;ul&gt;
&lt;li&gt;Existing solutions for common design problems&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t reinvent the wheel&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;testing&#34;&gt;Testing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Unit Tests
&lt;ul&gt;
&lt;li&gt;Test individual components&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Integration Tests
&lt;ul&gt;
&lt;li&gt;Test interaction of larger parts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;System Tests
&lt;ul&gt;
&lt;li&gt;Test the entire system&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;checks&#34;&gt;Checks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Consistency is key&lt;/li&gt;
&lt;li&gt;Automate whenever possible&lt;/li&gt;
&lt;li&gt;Code Format
&lt;ul&gt;
&lt;li&gt;Consistent code layout&lt;/li&gt;
&lt;li&gt;Available for almost every language&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Linters
&lt;ul&gt;
&lt;li&gt;Avoid common errors&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;c&#34;&gt;C++&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Clang-Format&lt;/li&gt;
&lt;li&gt;CMake-Format&lt;/li&gt;
&lt;li&gt;Clang-Tidy&lt;/li&gt;
&lt;li&gt;CppCheck&lt;/li&gt;
&lt;li&gt;CppLint&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;python&#34;&gt;Python&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;black&lt;/li&gt;
&lt;li&gt;yapf&lt;/li&gt;
&lt;li&gt;pylint&lt;/li&gt;
&lt;li&gt;flake8&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;sample&#34;&gt;Sample&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for t, m, ms in bag.read_messages():
    # do something
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;C0103: Variable name &amp;quot;t&amp;quot; doesn&#39;t conform to snake_case
naming style (invalid-name)

W0612: Unused variable &#39;t&#39; (unused-variable)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3 id=&#34;tools&#34;&gt;Tools&lt;/h3&gt;
&lt;p&gt;Know your tools&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IDE for the heavy development&lt;/li&gt;
&lt;li&gt;Editor as your swiss army knife&lt;/li&gt;
&lt;li&gt;Shortcuts&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;version-control&#34;&gt;Version Control&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git&lt;/a&gt; as most common tool&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git Feature Branch Workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Code Review
&lt;ul&gt;
&lt;li&gt;Knowledge transfer in both directions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;continuous-integration&#34;&gt;Continuous Integration&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Automatically run in a configured environment&lt;/li&gt;
&lt;li&gt;Requires scripted/containerized environment setup&lt;/li&gt;
&lt;li&gt;Avoid &lt;em&gt;&amp;ldquo;Works on my machine&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;ci-failure&#34;&gt;CI Failure&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;fail.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;ci-pass&#34;&gt;CI Pass&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;pass.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Summarize the latest status&lt;/li&gt;
&lt;li&gt;Requires active maintenance&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>Test Driven Development</title>
      <link>https://hofbi.github.io/slides/tdd/</link>
      <pubDate>Thu, 16 Jan 2020 15:00:00 +0000</pubDate>
      <guid>https://hofbi.github.io/slides/tdd/</guid>
      <description>&lt;h1 id=&#34;test-driven-development&#34;&gt;Test Driven Development&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hofbi/tdd-sample&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Code&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;unit-tests&#34;&gt;Unit Tests&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Separate (non production) program/code to test your code&lt;/li&gt;
&lt;li&gt;Test your code on the lowest (unit) layer&lt;/li&gt;
&lt;li&gt;General 3 step structure of a unit test
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Given&lt;/strong&gt;: Setup unit and environment&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;When&lt;/strong&gt;: Execute unit to test&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Then&lt;/strong&gt;: Test for expected result&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;why-tests&#34;&gt;Why Tests&lt;/h3&gt;
&lt;p&gt;Michael Feathers, Working Effectively with Legacy Code&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“To me, legacy code is simply code without tests.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tdd&#34;&gt;TDD&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Write your test before your production code&lt;/li&gt;
&lt;li&gt;3 Phases
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Red Phase&lt;/strong&gt;: Define a failing test&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Green Phase&lt;/strong&gt;: Fix that test (Solve Simple)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Refactoring&lt;/strong&gt;: Clean up your code&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;img src=&#34;https://angularjsbeginnerguide.files.wordpress.com/2017/01/tdd.jpg&#34; alt=&#34;TDD Workflow&#34; height=&#34;500&#34;/&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fizzbuzz-task&#34;&gt;FizzBuzz Task&lt;/h2&gt;
&lt;p&gt;Write a function that returns the number it was given or &lt;em&gt;Fizz&lt;/em&gt; if it is multiple of 3, &lt;em&gt;Buzz&lt;/em&gt; if it is multiple of 5 or &lt;em&gt;FizzBuzz&lt;/em&gt; if it is multiple of both.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hofbi/tdd-sample#cpp&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;C++&lt;/a&gt; | &lt;a href=&#34;https://github.com/hofbi/tdd-sample#python&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;task-definition&#34;&gt;Task Definition&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Can call function &lt;code&gt;fizzBuzz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Return 1 for 1&lt;/li&gt;
&lt;li&gt;Return 2 for 2&lt;/li&gt;
&lt;li&gt;Return Fizz for 3&lt;/li&gt;
&lt;li&gt;Return Buzz for 5&lt;/li&gt;
&lt;li&gt;Return Fizz for 6&lt;/li&gt;
&lt;li&gt;Return Buzz for 10&lt;/li&gt;
&lt;li&gt;Return FizzBuzz for 15&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hofbi/tdd-sample&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Try yourself&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://hofbi.github.io/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://hofbi.github.io/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-wowchemy&#34;&gt;Create slides in Markdown with Wowchemy&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wowchemy&lt;/a&gt; | &lt;a href=&#34;https://owchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
&lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
Three
&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/media/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/discussions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
